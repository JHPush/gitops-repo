app:
  namespace: product-service
  name: product-service-api
  replicas: 1
  image: '430118853107.dkr.ecr.ap-northeast-2.amazonaws.com/product-service:b4deae97a8d8a5619191e9e7ff7f615a83ea7dec'
  port: 15000
  resources: {}
  # resources:
  #  requests:
  #    cpu: 300m
  #    memory: 256Mi
  #  limits:
  #    cpu: 300m
  #    memory: 500Mi
podLabels:
  tier: backend
probes:
  readiness: {}
  liveness: {}
# probes:
#  readiness:
#      httpGet:
#      path: /actuator/health/readiness
#      port: 9000
#    initialDelaySeconds: 10
#    periodSeconds: 10
#  liveness:
#    httpGet:
#      path: /actuator/health/liveness
#      port: 9000
#    initialDelaySeconds: 120
#    periodSeconds: 10
service:
  enabled: true
  type: ClusterIP
  port: 80
serviceAccount:
  create: true
  name: product-sa
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::430118853107:role/S3AccessRoleForProductService
ingress:
  enabled: false
  #  annotations:
  #    alb.ingress.kubernetes.io/scheme: internet-facing
  #    alb.ingress.kubernetes.io/target-type: ip
  #  className: alb
  #  host: ""
  #  path: /
  #  pathType: Prefix
spring:
  profiles:
    active: dev
  datasource:
    url: jdbc:mysql://mysql.inkcloud.svc.cluster.local:3306/product_db?serverTimezone=Asia/Seoul&characterEncoding=utf8
    username: root
    password: "1234"
env:
  SPRING_KEYCLOAK_URL: https://keycloak.inkcloud.click
  SPRING_KAFKA: kafka-cluster-dev-broker.broker.svc.cluster.local:9092
  AWS_S3_BUCKET: inkcloud-product-images
